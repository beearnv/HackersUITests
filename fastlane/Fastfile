default_platform(:ios)

platform :ios do
  desc "Generate new screenshots"
  lane :screenshots do
    capture_screenshots(
      workspace: "Hackers.xcworkspace", 
      scheme: "Hackers",
      override_status_bar: true
    )
    frameit(
      path: "./fastlane/screenshots/"
    )
    # upload_to_app_store(skip_binary_upload: true, skip_metadata: true)
  end

  desc "Run Tests"
  lane :test do
    sh("xcrun simctl create TestiPhone com.apple.CoreSimulator.SimDeviceType.iPhone-11 com.apple.CoreSimulator.SimRuntime.iOS-15-4")
    scan(
      scheme: "HackersUITests",
      derived_data_path: "TestsData/DerivedData/",
      output_directory: "test_output/",
      result_bundle: true
      )
    sh("xcrun simctl delete TestiPhone")
    sh("./xcresults export ../test_output/HackersUITests.xcresult ../test_output/json")
    sh("python3 ./parser.py")
  end

  desc "Run Tests with error"
  error do |lane, exception, options|
  	if lane == :test
  		sh("xcrun simctl delete TestiPhone")
  		sh("./xcresults export ../test_output/HackersUITests.xcresult ../test_output/json")
    	sh("python3 ./parser.py")
  	end
  end

  desc "Build"
  lane :build do |options|
    xcodebuild(
      workspace: "Hackers.xcworkspace",
      scheme: "Hackers",
      configuration: "Debug",
      clean: options[:clean],
      build: true,
      sdk: "iphonesimulator"
    )
  end

  desc "Archive"
  lane :archive do
    gym(scheme: "Hackers")
  end

  desc "Lint"
  lane :lint do
    swiftlint
  end
end
